name: Reusable workflow build

on:
  push:
    branches:
      - main
  workflow_call:
    outputs:
      repo_name:
        description: "API URL"
        value: ${{ jobs.get-repo-name.outputs.repo_name }}
      timestamp:
        description: "API URL"
        value: ${{ jobs.get-repo-name.outputs.timestamp }}
jobs:
  get-repo-name:
    runs-on: ubuntu-latest
    outputs:
      repo_name: ${{ steps.get_name.outputs.repo_name }}
      timestamp: ${{ steps.get_timestamp.outputs.timestamp }}
    steps:
      - name: get_name
        id: get_name
        run: |
          echo "repo_name=$(basename ${{ github.repository }})" >> $GITHUB_OUTPUT
      - name: get_timestamp
        id: get_timestamp
        run: |
          echo "timestamp=$(date --utc +%FT%H-%M-%SZ)" >> $GITHUB_OUTPUT
  build-push:
    runs-on: ubuntu-latest
    needs: [get-repo-name]
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Log in to registry
        # This is where you will update the PAT to PAT_TOKEN
        run: echo "${{ secrets.PAT_TOKEN }}" | docker login ghcr.io -u athomaj --password-stdin

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push back
        uses: docker/build-push-action@v6
        env:
          IMG_NAME: ghcr.io/code4sud/ia4sud
        with:
          context: ./
          file: ./docker/Dockerfile
          push: true
          tags: ghcr.io/code4sud/${{ needs.get-repo-name.outputs.repo_name }}:dev-${{ needs.get-repo-name.outputs.timestamp }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      # Step 3: Configure kubeconfig from secrets
      - name: Set up kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 -d > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
      - name: Deployment to kubernetes
        run: |
          PROJECT_NAME=${{ needs.get-repo-name.outputs.repo_name }} IMAGE="ghcr.io/code4sud/${{ needs.get-repo-name.outputs.repo_name }}:dev-${{ needs.get-repo-name.outputs.timestamp }}" envsubst < ./kube/deployment.yaml | kubectl apply -n ia4sud -f -

      - name: Service to kubernetes
        run: |
          PROJECT_NAME=${{ needs.get-repo-name.outputs.repo_name }} envsubst < ./kube/service.yaml | kubectl apply -n ia4sud -f -

      - name: Ingress to kubernetes
        run: |
          PROJECT_NAME=${{ needs.get-repo-name.outputs.repo_name }} envsubst < ./kube/ingress.yaml | kubectl apply -n ia4sud -f -

      # - uses: actions-hub/kubectl@master
      #   env:
      #     KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      #   with:
      #     args: set image deployment/${{ needs.get-repo-name.outputs.repo_name }}-deployment ${{ needs.get-repo-name.outputs.repo_name }}="ghcr.io/code4sud/${{ needs.get-repo-name.outputs.repo_name }}:dev-${{ needs.get-repo-name.outputs.timestamp }}" -n ia4sud
